{"version":3,"sources":["images/VOD-app.png","components/Navbar.jsx","sections/Home.jsx","components/Logbtn.jsx","components/Info.jsx","components/Regbtn.jsx","sections/Initiate.jsx","components/Loginform.jsx","sections/Login.jsx","components/Regform.jsx","sections/Register.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","Fragment","className","src","require","alt","to","React","Component","Home","Logbtn","Info","Regbtn","Initiate","Loginform","props","handleChange","email","event","setState","target","value","handleSubmit","alert","preventDefault","state","name","password","bind","onSubmit","this","type","onChange","placeholder","Login","Regform","user","console","log","Register","App","exact","path","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1c8d5aca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/VOD-app.a2b389ef.png\";","import React from \"react\";\nimport \"../styles/navbar.css\";\nimport { Link } from \"react-router-dom\";\n\nclass Navbar extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <nav className=\"nav-item\">\n          <img src={require('../images/VOD-app.png')} alt='brand-home' className='brand-home'/>  \n          <Link to=\"/Watched\" className=\"btn-history\">\n            History\n          </Link>\n          <Link to=\"/Home\" className=\"btn-home\">\n            Home\n          </Link>\n        </nav>\n      </React.Fragment>\n    );\n  }\n}\nexport default Navbar;\n","import React from 'react';\nimport Navbar from '../components/Navbar'\n\nconst Home =()=>{\n    return(\n        <div className='home-container'>\n            <Navbar/>\n        </div>\n    )\n}\n\nexport default Home;","import React from 'react';\nimport '../styles/log-btn.css';\nimport {Link} from 'react-router-dom';\n\nconst Logbtn =()=>{\n    return(\n        <div className='log-btn-container'>\n            {/*<a href='#Login_' className='log-btn log-text'>Login</a>*/}\n                <Link to='/Login' className='log-btn log-text'>Sign in</Link>\n        </div>\n    )\n}\n\nexport default Logbtn;","import React from 'react';\nimport '../styles/Info.css';\n\nconst Info =()=>{\n    return(\n        <div className='Info-container'>\n            <img src={require('../images/VOD-app.png')} alt='brand' className='brand-img'/>\n            <h2 className='Info-text'>\n                Experiment the magical world of <b>VOD app</b>, come,\n                prove and see all movies you want.<br/> Everytime, \n                everywhere for less than the competition.\n            </h2>\n        </div>\n    )\n}\n\nexport default Info;","import React from 'react';\nimport '../styles/reg-btn.css';\nimport {Link} from 'react-router-dom';\n\nconst Regbtn =()=>{\n    return(\n        <div className='reg-btn-container'>\n            {/*<a href='#Login_' className='reg-btn reg-text'>Let's go there!</a>*/}\n                <Link to='/Register' className='reg-btn reg-text'>Let's go there!</Link>\n        </div>\n    )\n}\n\nexport default Regbtn;","import React from 'react';\nimport '../styles/Initiate.css';\nimport Logbtn from '../components/Logbtn';\nimport Info from '../components/Info';\nimport Regbtn from '../components/Regbtn';\n//import {Link} from 'react-router-dom';\n\nconst Initiate =()=>{\n    return(\n        <div className='Initiate'>\n            <div className='Initiate-container'>\n                <br/>\n                <Logbtn/>\n                <Info />\n                <Regbtn />\n                <br />\n            </div>\n        </div>\n    )\n\n}\n\nexport default Initiate;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../styles/Logform.css\";\n\nclass Loginform extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\"\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange = email => event => {\n    this.setState({ [email]: event.target.value });\n  };\n\n  handleSubmit = event => {\n    alert(\"Welcome back!\");\n    event.preventDefault();\n  };\n  render() {\n    return (\n      <div className=\"loginform\">\n          <br/> <br/>\n          <Link to='/' className='back'>Back</Link>\n        <div className=\"logform-container\">\n            <img src={require('../images/VOD-app.png')} alt='brand-log' className='brand-pic'/>\n            <h3 className='login-text'>Sign in to start watching</h3>\n          <form onSubmit={this.handleSubmit}>\n            <input\n              type=\"email\"\n              value={this.state.value}\n              onChange={this.handleChange}\n              className=\"mail-box2\"\n              placeholder=\"e-mail\"\n            />\n            <br />\n            <input\n              type=\"password\"\n              value={this.state.value}\n              onChange={this.handleChange}\n              className=\"pass-box\"\n              placeholder=\"password\"\n            />\n            <br />\n            <Link to=\"/Home\">\n              <input type=\"submit\" value=\"Login\" className='btn-submit'/>\n            </Link>\n            <Link to='/Register' className='log-text2'><p>Do you want to suscribe? Press here</p></Link>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Loginform;\n","import React from 'react';\nimport Loginform from '../components/Loginform';\n\nconst Login =()=>{\n    return(\n        <div className='login-container'>\n            <Loginform />\n        </div>\n    );\n}\n\nexport default Login;","import React from \"react\";\nimport \"../styles/Regform.css\";\nimport { Link } from \"react-router-dom\";\n\nclass Regform extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\"\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  handleSubmit(event) {\n    alert(\"Your account was created succesfully!!\");\n    event.preventDefault();\n    const { name, email, password } = this.state;\n    const user = {\n      name,\n      email,\n      password\n    };\n    console.log(user);\n  }\n\n  render() {\n    return (\n      <div className=\"Regform\">\n          <br/><br/>\n          <Link to='/'className='back'> Back</Link>\n        <div className=\"reg-container\">\n          <img\n            src={require(\"../images/VOD-app.png\")}\n            alt=\"reg-brand\"\n            className=\"brand-pic\"\n          />\n          <h3 className=\"reg-text2\">Register Form</h3>\n          <form onSubmit={this.handleSubmit}>\n            <input\n              type=\"text\"\n              value={this.state.value}\n              onChange={this.handleChange}\n              placeholder=\"name\"\n              className=\"name-box\"\n            />\n            <br />\n            <input\n              type=\"email\"\n              value={this.state.value}\n              onChange={this.handleChange}\n              placeholder=\"e-mail\"\n              className=\"mail-box\"\n            />\n            <br />\n            <input\n              type=\"password\"\n              value={this.state.value}\n              onChange={this.handleChange}\n              placeholder=\"password\"\n              className=\"pass-box\"\n            />\n            <br />\n            <input type=\"submit\" value=\"Register\" className=\"btn-submit\" />\n          </form>\n          <Link to=\"/Login\">\n            <p className=\"log-text2\">Do you have an account? Click here</p>\n          </Link>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Regform;\n","import React from 'react';\nimport Regform from '../components/Regform';\n\nconst Register =()=>{\n    return(\n        <div className='Register-container'>\n            <Regform />\n        </div>\n    );\n}\n\nexport default Register;\n","import React from 'react';\nimport {HashRouter, Switch, Route} from 'react-router-dom';\nimport History from './sections/History';\nimport Home from './sections/Home';\nimport Initiate from './sections/Initiate';\nimport Login from './sections/Login';\nimport Movie from './sections/Movie';\nimport Register from './sections/Register';\nimport Reset from './sections/Reset';\nimport './App.css';\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\" render={()=> <Initiate />} />\n        <Route exact path=\"/Login\" render={()=><Login />} />\n        <Route exact path=\"/Reset-Password\" render={()=><Reset />} />\n        <Route exact path=\"/Register\" render={()=><Register />} />\n        <Route exact path=\"/Home\" render={()=><Home />} />\n        <Route exact path=\"/Movie\" render={()=><Movie />} />\n        <Route exact path=\"/Watched\" render={()=><History />} />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n//import Initiate from '../src/sections/Initiate'\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}